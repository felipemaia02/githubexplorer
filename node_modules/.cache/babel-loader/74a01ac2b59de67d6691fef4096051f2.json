{"ast":null,"code":"var _jsxFileName = \"/home/embrapa01/Documents/githubexplorer/src/pages/Repository/index.tsx\";\nimport React, { useEffect, useState } from 'react';\nimport { useRouteMatch, Link } from 'react-router-dom';\nimport { FiChevronLeft, FiChevronRight } from 'react-icons/fi';\nimport logoImg from \"../../assets/logo.svg\";\nimport { Header, RepositoryInfo, Issues } from './styles';\nimport api from '../../services/api';\n\nconst Repository = () => {\n  const [repository, setRepository] = useState(null);\n  const [issues, setIssues] = useState([]);\n  const {\n    params\n  } = useRouteMatch();\n  useEffect(() => {\n    api.get(`repos/${params.repository}`).then(response => {\n      setRepository(response.data);\n    });\n    api.get(`repos/${params.repository}/issues`).then(response => {\n      setIssues(response.data);\n    });\n  }, [params.repository]);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: logoImg,\n    alt: \"Github Explorer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(Link, {\n    to: \"/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(FiChevronLeft, {\n    size: 16,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }\n  }), \"Voltar\")), repository && /*#__PURE__*/React.createElement(RepositoryInfo, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"header\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: repository.owner.avatar_url,\n    alt: repository.owner.login,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  }, repository.full_name), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  }, repository.description))), /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }\n  }, repository.stargazers_count), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }\n  }, \"Stars\")), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }\n  }, repository.forks_count), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }\n  }, \"Fork\")), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }\n  }, repository.open_issues_count), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }\n  }, \"Issues abertas\")))), /*#__PURE__*/React.createElement(Issues, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 3\n    }\n  }, issues.map(issue => /*#__PURE__*/React.createElement(Link, {\n    to: \"oidasodiasdo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 15\n    }\n  }, \"dasdasdasd\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 15\n    }\n  }, \"adasdasd\")), /*#__PURE__*/React.createElement(FiChevronRight, {\n    size: 20,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }\n  })))));\n};\n\nexport default Repository;","map":{"version":3,"sources":["/home/embrapa01/Documents/githubexplorer/src/pages/Repository/index.tsx"],"names":["React","useEffect","useState","useRouteMatch","Link","FiChevronLeft","FiChevronRight","Header","RepositoryInfo","Issues","api","Repository","repository","setRepository","issues","setIssues","params","get","then","response","data","logoImg","owner","avatar_url","login","full_name","description","stargazers_count","forks_count","open_issues_count","map","issue"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,aAAT,EAAwBC,IAAxB,QAAoC,kBAApC;AACA,SAASC,aAAT,EAAwBC,cAAxB,QAA8C,gBAA9C;;AAGA,SAAQC,MAAR,EAAgBC,cAAhB,EAAgCC,MAAhC,QAA6C,UAA7C;AACA,OAAOC,GAAP,MAAgB,oBAAhB;;AA8BA,MAAMC,UAAoB,GAAG,MAAM;AACjC,QAAM,CAAEC,UAAF,EAAcC,aAAd,IAA+BX,QAAQ,CAAoB,IAApB,CAA7C;AACA,QAAM,CAACY,MAAD,EAASC,SAAT,IAAsBb,QAAQ,CAAU,EAAV,CAApC;AACA,QAAM;AAAEc,IAAAA;AAAF,MAAab,aAAa,EAAhC;AAEAF,EAAAA,SAAS,CAAC,MAAM;AACdS,IAAAA,GAAG,CAACO,GAAJ,CAAS,SAAQD,MAAM,CAACJ,UAAW,EAAnC,EAAsCM,IAAtC,CAA2CC,QAAQ,IAAI;AACrDN,MAAAA,aAAa,CAACM,QAAQ,CAACC,IAAV,CAAb;AACD,KAFD;AAGAV,IAAAA,GAAG,CAACO,GAAJ,CAAS,SAAQD,MAAM,CAACJ,UAAW,SAAnC,EAA6CM,IAA7C,CAAkDC,QAAQ,IAAI;AAC5DJ,MAAAA,SAAS,CAACI,QAAQ,CAACC,IAAV,CAAT;AACD,KAFD;AAGD,GAPQ,EAON,CAACJ,MAAM,CAACJ,UAAR,CAPM,CAAT;AASF,sBACE,uDACA,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,GAAG,EAAIS,OAAZ;AAAqB,IAAA,GAAG,EAAG,iBAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAG,GAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,aAAD;AAAe,IAAA,IAAI,EAAE,EAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,WAFF,CADA,EASCT,UAAU,iBACT,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,GAAG,EAAIA,UAAU,CAACU,KAAX,CAAiBC,UAA7B;AAAyC,IAAA,GAAG,EAAIX,UAAU,CAACU,KAAX,CAAiBE,KAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAASZ,UAAU,CAACa,SAApB,CADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIb,UAAU,CAACc,WAAf,CAFF,CAFF,CADA,eAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAASd,UAAU,CAACe,gBAApB,CADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAFJ,CADA,eAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAASf,UAAU,CAACgB,WAApB,CADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,CALF,eASE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAShB,UAAU,CAACiB,iBAApB,CADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAFF,CATF,CARA,CAVF,eAoCA,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGf,MAAM,CAACgB,GAAP,CAAWC,KAAK,iBACX,oBAAC,IAAD;AAAO,IAAA,EAAE,EAAE,cAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,CADF,eAKE,oBAAC,cAAD;AAAgB,IAAA,IAAI,EAAI,EAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,CADL,CADH,CApCA,CADF;AAkDC,CAhED;;AAkEA,eAAepB,UAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useRouteMatch, Link } from 'react-router-dom'\nimport { FiChevronLeft, FiChevronRight } from 'react-icons/fi'\n\nimport logoImg from '../../assets/logo.svg';\nimport {Header, RepositoryInfo, Issues} from './styles'\nimport api from '../../services/api'\n\n\ninterface repositoryParams{\n  repository: string,\n\n}\n\ninterface Repository {\n  full_name: string;\n  description: string;\n  stargazers_count: number;\n  forks_count: number;\n  open_issues_count: number;\n  owner : {\n    login:string;\n    avatar_url:string;\n\n  }\n}\n\ninterface Issue{\n  id: number;\n  title: string;\n  html_url: string;\n  user: {\n    login: string;\n  }\n}\n\nconst Repository: React.FC = () => {\n  const [ repository, setRepository] = useState<Repository | null>(null);\n  const [issues, setIssues] = useState<Issue[]>([]);\n  const { params } = useRouteMatch<repositoryParams>();\n\n  useEffect(() => {\n    api.get(`repos/${params.repository}`).then(response => {\n      setRepository(response.data)\n    })\n    api.get(`repos/${params.repository}/issues`).then(response => {\n      setIssues(response.data)\n    })\n  }, [params.repository])\n\nreturn (\n  <>\n  <Header>\n    <img src = {logoImg} alt = \"Github Explorer\" />\n    <Link to = \"/\" >\n      <FiChevronLeft size={16}/>\n      Voltar\n      </Link>\n  </Header>\n\n  {repository && (\n    <RepositoryInfo>\n    <header>\n      <img src = {repository.owner.avatar_url} alt = {repository.owner.login}/>\n      <div>\n        <strong>{repository.full_name}</strong>\n        <p>{repository.description}</p>\n      </div>\n    </header>\n    <ul>\n    <li>\n        <strong>{repository.stargazers_count}</strong>\n        <span>Stars</span>\n      </li>\n      <li>\n        <strong>{repository.forks_count}</strong>\n        <span>Fork</span>\n      </li>\n      <li>\n        <strong>{repository.open_issues_count}</strong>\n        <span>Issues abertas</span>\n      </li>\n    </ul>\n\n  </RepositoryInfo>\n  )}\n\n  <Issues>\n    {issues.map(issue => (\n          <Link  to =\"oidasodiasdo\">\n            <div>\n              <strong>dasdasdasd</strong>\n              <p>adasdasd</p>\n            </div>\n            <FiChevronRight size = {20}/>\n          </Link>\n    ))}\n  </Issues>\n  </>\n  );\n};\n\nexport default Repository;\n"]},"metadata":{},"sourceType":"module"}