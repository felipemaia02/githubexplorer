{"ast":null,"code":"var _jsxFileName = \"/home/embrapa01/Documents/githubexplorer/src/pages/Dashboard/index.tsx\";\nimport React, { useState } from 'react';\nimport { FiChevronRight } from 'react-icons/fi';\nimport api from '../../services/api';\nimport logoImg from \"../../assets/logo.svg\";\nimport { Title, Form, Repositories } from './styles';\nimport Repository from '../Repository';\n\nconst Dashboard = () => {\n  const [newRepo, setNewRepo] = useState('');\n  const [inputError, setInputError] = useState('');\n  const [repositories, setRepositories] = useState([]);\n\n  async function handleAddRepository(event) {\n    if (!newRepo) {\n      setInputError('Digite o autor/nome do repositorio');\n    }\n\n    event.preventDefault();\n    const response = await api.get(`repos/${newRepo}`);\n    const repository = response.data;\n    setRepositories([...repositories, repository]);\n    setNewRepo('');\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"img\", {\n    src: logoImg,\n    alt: \"github Explorer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 3\n    }\n  }), /*#__PURE__*/React.createElement(Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 3\n    }\n  }, \"Explore reposit\\xF3rios no Github.\"), /*#__PURE__*/React.createElement(Form, {\n    onSubmit: handleAddRepository,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    value: newRepo,\n    onChange: e => setNewRepo(e.target.value),\n    placeholder: \"Digite o nome do reposit\\xF3rio\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 5\n    }\n  }, \"Pesquisar\")), /*#__PURE__*/React.createElement(Repositories, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 3\n    }\n  }, repositories.map(repository => /*#__PURE__*/React.createElement(\"a\", {\n    key: repository.full_name,\n    href: \"teste\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: repository.owner.avatar_url,\n    alt: repository.owner.login,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 11\n    }\n  }, repository.full_name), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 11\n    }\n  }, repository.description)), /*#__PURE__*/React.createElement(FiChevronRight, {\n    size: 20,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  })))));\n};\n\nexport default Dashboard;","map":{"version":3,"sources":["/home/embrapa01/Documents/githubexplorer/src/pages/Dashboard/index.tsx"],"names":["React","useState","FiChevronRight","api","Title","Form","Repositories","Repository","Dashboard","newRepo","setNewRepo","inputError","setInputError","repositories","setRepositories","handleAddRepository","event","preventDefault","response","get","repository","data","logoImg","e","target","value","map","full_name","owner","avatar_url","login","description"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAA2C,OAA3C;AACA,SAASC,cAAT,QAA+B,gBAA/B;AACA,OAAOC,GAAP,MAAgB,oBAAhB;;AAIA,SAASC,KAAT,EAAgBC,IAAhB,EAAsBC,YAAtB,QAA0C,UAA1C;AACA,OAAOC,UAAP,MAAuB,eAAvB;;AAaA,MAAMC,SAAmB,GAAG,MAAM;AAChC,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBT,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACU,UAAD,EAAaC,aAAb,IAA8BX,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACY,YAAD,EAAeC,eAAf,IAAkCb,QAAQ,CAAe,EAAf,CAAhD;;AAEA,iBAAec,mBAAf,CAAmCC,KAAnC,EAAoF;AAClF,QAAI,CAACP,OAAL,EAAa;AACXG,MAAAA,aAAa,CAAC,oCAAD,CAAb;AACD;;AACDI,IAAAA,KAAK,CAACC,cAAN;AAEA,UAAMC,QAAQ,GAAG,MAAMf,GAAG,CAACgB,GAAJ,CAAqB,SAAQV,OAAQ,EAArC,CAAvB;AAEA,UAAMW,UAAU,GAAGF,QAAQ,CAACG,IAA5B;AAEAP,IAAAA,eAAe,CAAC,CAAC,GAAGD,YAAJ,EAAkBO,UAAlB,CAAD,CAAf;AACAV,IAAAA,UAAU,CAAC,EAAD,CAAV;AACD;;AAED,sBACA,uDACA;AAAK,IAAA,GAAG,EAAIY,OAAZ;AAAqB,IAAA,GAAG,EAAC,iBAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,eAEA,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0CAFA,eAIA,oBAAC,IAAD;AAAM,IAAA,QAAQ,EAAIP,mBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAO,IAAA,KAAK,EAAEN,OAAd;AAAuB,IAAA,QAAQ,EAAKc,CAAD,IAAOb,UAAU,CAACa,CAAC,CAACC,MAAF,CAASC,KAAV,CAApD;AAAsE,IAAA,WAAW,EAAG,iCAApF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAFF,CAJA,eASA,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGZ,YAAY,CAACa,GAAb,CAAiBN,UAAU,iBAC1B;AAAG,IAAA,GAAG,EAAIA,UAAU,CAACO,SAArB;AAA+B,IAAA,IAAI,EAAG,OAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,GAAG,EAAIP,UAAU,CAACQ,KAAX,CAAiBC,UAA7B;AAAyC,IAAA,GAAG,EAAGT,UAAU,CAACQ,KAAX,CAAiBE,KAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAASV,UAAU,CAACO,SAApB,CADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIP,UAAU,CAACW,WAAf,CAFF,CAFF,eAME,oBAAC,cAAD;AAAgB,IAAA,IAAI,EAAI,EAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,CADD,CADH,CATA,CADA;AAyBD,CA5CD;;AA8CA,eAAevB,SAAf","sourcesContent":["import React, { useState, FormEvent } from 'react';\nimport { FiChevronRight } from 'react-icons/fi';\nimport api from '../../services/api';\n\nimport logoImg from '../../assets/logo.svg';\n\nimport { Title, Form, Repositories } from './styles'\nimport Repository from '../Repository';\nimport { promises } from 'dns';\n\ninterface Repository {\n  full_name: string;\n  description: string;\n  owner : {\n    login:string;\n    avatar_url:string;\n\n  }\n}\n\nconst Dashboard: React.FC = () => {\n  const [newRepo, setNewRepo] = useState('')\n  const [inputError, setInputError] = useState('');\n  const [repositories, setRepositories] = useState<Repository[]>([]);\n\n  async function handleAddRepository(event: FormEvent<HTMLFormElement>): Promise<void>{\n    if (!newRepo){\n      setInputError('Digite o autor/nome do repositorio');\n    }\n    event.preventDefault();\n\n    const response = await api.get<Repository>(`repos/${newRepo}`);\n\n    const repository = response.data\n\n    setRepositories([...repositories, repository]);\n    setNewRepo('');\n  }\n\n  return (\n  <>\n  <img src = {logoImg} alt=\"github Explorer\" />\n  <Title>Explore repositórios no Github.</Title>\n\n  <Form onSubmit = {handleAddRepository}>\n    <input value={newRepo} onChange = {(e) => setNewRepo(e.target.value)} placeholder = \"Digite o nome do repositório\"/>\n    <button type=\"submit\">Pesquisar</button>\n  </Form>\n\n  <Repositories>\n    {repositories.map(repository => (\n      <a key = {repository.full_name}href = \"teste\">\n        <img src = {repository.owner.avatar_url} alt= {repository.owner.login}/>\n        <div>\n          <strong>{repository.full_name}</strong>\n          <p>{repository.description}</p>\n        </div>\n        <FiChevronRight size = {20}/>\n      </a>\n     ))}\n\n  </Repositories>\n  </>\n  );\n};\n\nexport default Dashboard;\n"]},"metadata":{},"sourceType":"module"}